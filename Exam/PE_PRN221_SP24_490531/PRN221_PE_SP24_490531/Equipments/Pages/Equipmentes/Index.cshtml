@page
@model Equipments.Pages.Equipmentes.IndexModel

@{
    ViewData["Title"] = "Index";
}

<!-- Logout -->
@if (Request.Cookies["Email"] != null)
{
    <p>Hello, @Request.Cookies["Email"]</p>
    <form method="post">
        <button asp-page-handler="Logout" class="btn btn-danger">Logout</button>
    </form>
}

<!-- Thông báo lỗi do không có quyền để truy cập function đó -->
@if (TempData["PermissionError"] != null)
{
    <div class="alert alert-danger">@TempData["PermissionError"]</div>
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<!-- Search & Sort -->
<form method="get" class="mb-4 border rounded p-3 bg-light shadow-sm">
    <div class="row g-3">

        <!-- Search -->
        <div class="col-md-4">
            <label class="form-label fw-bold">Equipment Name</label>
            <input type="text" name="eqName" class="form-control"
                   value="@Request.Query["eqName"]" placeholder="e.g. Paracetamol">
        </div>
        <div class="col-md-4">
            <label class="form-label fw-bold">Quantity</label>
            <input type="text" name="quantity" class="form-control"
                   value="@Request.Query["quantity"]" placeholder="e.g. 10">
        </div>

        <!-- Sort -->
        <div class="col-md-4">
            <label class="form-label fw-bold">Sort By</label>
            <select name="sortOption" class="form-select">
                <option value="">-- No Sort --</option>
                <option value="name_asc" selected="@(Request.Query["sortOption"] == "name_asc")">Name (A-Z)</option>
                <option value="name_desc" selected="@(Request.Query["sortOption"] == "name_desc")">Name (Z-A)</option>
            </select>
        </div>

        <div class="col-md-12 d-flex justify-content-end align-items-end">
            <button type="submit" class="btn btn-primary px-4">Search</button>
        </div>
    </div>
</form>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Equipment[0].EqCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Equipment[0].EqName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Equipment[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Equipment[0].Model)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Equipment[0].SupplierName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Equipment[0].CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Equipment[0].UpdatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Equipment[0].Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Equipment[0].Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Equipment[0].Rooms)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Equipment) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.EqCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EqName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Model)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SupplierName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rooms.RoomName)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.EqID">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.EqID">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.EqID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<!-- Phân trang -->
@if (Model.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            <!-- Previous Button -->
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="?activeIngredients=@Request.Query["eqName"]&warnings=@Request.Query["quantity"]&sortOption=@Request.Query["sortOption"]&pageIndex=@(Model.CurrentPage - 1)&pageSize=5">
                    « Prev
                </a>
            </li>

            <!-- Page Numbers -->
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="?activeIngredients=@Request.Query["eqName"]&warnings=@Request.Query["quantity"]&sortOption=@Request.Query["sortOption"]&pageIndex=@i&pageSize=5">@i</a>
                </li>
            }

            <!-- Next Button -->
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="?activeIngredients=@Request.Query["eqName"]&warnings=@Request.Query["quantity"]&sortOption=@Request.Query["sortOption"]&pageIndex=@(Model.CurrentPage + 1)&pageSize=5">
                    Next »
                </a>
            </li>
        </ul>
    </nav>
}
