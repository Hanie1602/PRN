1. Tạo solution + project name theo đề yêu cầu
2. Nên để ở Desktop cho an toàn
3. Ấn phải chuột Solution -> Add -> New Project -> Class Library -> đặt tên: .....BLL
4. Ấn phải chuột Solution -> Add -> New Project -> Class Library -> đặt tên: .....DAL
====================================
5. Ẩn phải chuột Dependencies trong AirConditionerShop_LNTD -> Add Project Reference -> Chọn .BLL
6. Vào Projects -> AirConditionerShop.BLL -> Copy Local -> Yes
====================================
7. Ấn phải chuột Dependencies trong AirCondionerShop.BLL -> Add Project Reference -> Chọn .DAL
8. Vào Projects -> AirConitionerShop.DAL -> Copy Local -> Yes
====================================
9. Build -> Build Solution: để xem có lỗi gì không
====================================
10. Ấn phải chuột trên Project chính -> Add -> New Item -> chọn json -> appsettings.json
11. Chọn appsettings.json -> Copy to Output Directory: Copy always
12. Build -> Rebuild Solution
====================================
13. Ấn phải chuột trên Project chính -> Add -> New Item -> Window (WPF) -> LoginWindow (add thêm DetailWindow)
====================================
CHỈNH UI: TITLE, MÀU NỀN, VÀ MÀN HÌNH PHẢI CĂN GIỮA
14. Vào App.xaml -> Đổi StartupUri="MainWindow.xaml thành StartupUri="LoginWindow.xaml"
15. Vào đề copy UI cho từng màn hình
16. View -> Toolbox -> Dùng mỗi Common WPF Controls hoặc trong All WPF Controls
17. Để có thể cho đồng bộ màu cho tất cả label + TextBox: Click vào App.xaml -> 
=====================================
18. Kết nối với Database
19. Vào project .DAL -> manager nuget -> add 6 cái
20. Build -> Build Solution
21. Chuột phải vào .DAL -> Chọn Open terminal -> dotnet ef dbcontext scaffold "Server=(local);Database=AirConditionerShop2024DB;UID=sa;PWD=12345;TrustServerCertificate=True" "Microsoft.EntityFrameworkCore.SqlServer" --output-dir "Entities" --context-dir ".\"
22. Vào appsettings.json -> Dán 
{
  "ConnectionStrings": {
    "DefaultConnectionStringDB": "server =(local); database=AirConditionerShop2024DB;uid=sa;pwd=12345; TrustServerCertificate=True"
  }
}
23. ....DbContext -> 
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
		optionsBuilder.UseSqlServer(GetConnectionString());
	}

	private string GetConnectionString()
	{
		IConfiguration config = new ConfigurationBuilder()
			 .SetBasePath(Directory.GetCurrentDirectory())
					.AddJsonFile("appsettings.json", true, true)
					.Build();
		var strConn = config["ConnectionStrings:DefaultConnectionStringDB"];

		return strConn;
	}

