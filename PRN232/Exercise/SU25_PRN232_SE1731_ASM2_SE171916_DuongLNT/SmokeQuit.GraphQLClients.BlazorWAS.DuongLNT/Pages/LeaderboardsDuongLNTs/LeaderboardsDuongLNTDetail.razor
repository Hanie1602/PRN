@page "/LeaderboardsDuongLNTs/LeaderboardsDuongLNTDetail/{id:int}"

@using SmokeQuit.GraphQLClients.BlazorWAS.DuongLNT.GraphQLClients
@using SmokeQuit.GraphQLClients.BlazorWAS.DuongLNT.Models

@* Dùng để gọi các API GraphQL *@
@inject GraphQLConsumer _graphQLConsumer
@inject NavigationManager Navigation

<h3 class="mt-3">Detail Leaderboard</h3>

@if (leaderboard == null)
{
	<p>Loading...</p>
}
else
{
	<div class="card">
		<div class="card-body">
			<h5 class="card-title">ID: @leaderboard.LeaderboardsDuongLntid</h5>
			<p class="card-text"><strong>Day Smoke Free:</strong> @leaderboard.DaySmokeFree</p>
			<p class="card-text"><strong>Money Save:</strong> @leaderboard.MoneySave</p>
			<p class="card-text"><strong>Rank Position:</strong> @leaderboard.RankPosition</p>
			<p class="card-text"><strong>Total Achievements:</strong> @leaderboard.TotalAchievements</p>
			<p class="card-text"><strong>Note:</strong> @leaderboard.Note</p>
			<p class="card-text"><strong>Top Rank?</strong> @(leaderboard.IsTopRanked ? "✅" : "❌")</p>
			<p class="card-text"><strong>Created Time:</strong> @leaderboard.CreatedTime?.ToString("dd/MM/yyyy")</p>
			<p class="card-text"><strong>Plan Reason:</strong> @(leaderboard.Plan?.Reason ?? "N/A")</p>
			<p class="card-text"><strong>User:</strong> @(leaderboard.User?.UserName ?? "N/A")</p>
			<button class="btn btn-secondary" @onclick="@(() => Navigation.NavigateTo("/LeaderboardsDuongLNTs/LeaderboardsDuongLNTList"))">
				Back to list
			</button>
		</div>
	</div>
}

@code {
	[Parameter]
	public int id { get; set; }

	private LeaderboardsDuongLnt? leaderboard;

	protected override async Task OnInitializedAsync()
	{
		leaderboard = await _graphQLConsumer.GetLeaderboardsDuongLntById(id);
	}
}
