@page "/"
@inject GraphQLConsumer GraphQLConsumer
@inject NavigationManager Navigation

@using SmokeQuit.GraphQLClients.BlazorWAS.DuongLNT.GraphQLClients

<PageTitle>Login</PageTitle>

<div class="d-flex justify-content-center align-items-center vh-100 bg-light">
	<div class="card shadow p-4" style="min-width: 400px; max-width: 500px;">
		<h3 class="text-center mb-4 text-primary">🚭 SmokeQuit - Login</h3>

		@if (!string.IsNullOrEmpty(error))
		{
			<div class="alert alert-danger">@error</div>
		}

		<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
			<DataAnnotationsValidator />
			<ValidationSummary />

			<div class="mb-3">
				<label class="form-label">👤 Username</label>
				<InputText class="form-control" @bind-Value="loginModel.Username" placeholder="Enter your username" />
			</div>

			<div class="mb-3">
				<label class="form-label">🔒 Password</label>
				<InputText class="form-control" @bind-Value="loginModel.Password" type="password" placeholder="Enter your password" />
			</div>

			<button class="btn btn-primary w-100 mt-2" type="submit">🔓 Login</button>
		</EditForm>
	</div>
</div>

@code {
	private LoginModel loginModel = new();
	private string error;

	public class LoginModel
	{
		public string Username { get; set; }
		public string Password { get; set; }
	}

	private async Task HandleLogin()
	{
		var user = await GraphQLConsumer.LoginAsync(loginModel.Username, loginModel.Password);
		if (user != null)
		{
			//Redirect tới trang chính
			Navigation.NavigateTo("/LeaderboardsDuongLNTs/LeaderboardsDuongLNTList");
		}
		else
		{
			error = "❌ Invalid username or password.";
		}
	}
}
